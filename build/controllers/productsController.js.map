{"version":3,"sources":["../../src/controllers/productsController.js"],"names":["ProductsController","req","res","models","Product","findAll","then","status","send","success","message","data","products","id","parseInt","params","findByPk","product","body","name","description","price","categoryId","create","update","result","dataValues","destroy","productController"],"mappings":"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","file":"productsController.js","sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport models from '../models';\r\n\r\nclass ProductsController {\r\n    getAllProducts(req, res) {\r\n        models.Product.findAll()\r\n        .then(products => res.status(200).send({\r\n          success: 'true',\r\n          message: 'Products retrieved successfully',\r\n          data:products,\r\n        }));\r\n      }\r\n\r\n  getProduct(req, res) {\r\n  const id = parseInt(req.params.id, 10);\r\n  models.Product.findByPk(id)\r\n  .then((product) => {\r\n    if (product) {\r\n      return res.status(200).send({\r\n        success: 'true',\r\n        message: 'Product retrieved successfully',\r\n        data:product,\r\n      });\r\n    }\r\n    return res.status(404).send({\r\n      success: 'false',\r\n      message: 'Product does not exist',\r\n    });\r\n  });\r\n}\r\n\r\n  createProduct(req, res) {\r\n    if (!req.body.name) {\r\n        return res.status(400).send({\r\n            success: 'false',\r\n            message: 'Name is required',\r\n        });\r\n    }\r\n    if (!req.body.description) {\r\n        return res.status(400).send({\r\n        success: 'false',\r\n        message: 'Descriotion is required',\r\n        });\r\n    }\r\n    if (!req.body.price) {\r\n        return res.status(400).send({\r\n        success: 'false',\r\n        message: 'Price is required',\r\n        });\r\n    }\r\n    if (!req.body.categoryId) {\r\n      return res.status(400).send({\r\n      success: 'false',\r\n      message: 'At least one category must be given',\r\n      });\r\n  }\r\n  const product = {\r\n    name: req.body.name,\r\n    description: req.body.description,\r\n    price: req.body.price,\r\n    categoryId: req.body.categoryId,\r\n  };\r\n  models.Product.create(product).then((product) => {\r\n    return res.status(201).send({\r\n       success: 'true',\r\n       message: 'Product added successfully',\r\n       data:product,\r\n     });\r\n  });\r\n  }\r\n\r\n  updateProduct(req, res) {\r\n    const id = parseInt(req.params.id, 10);\r\n    models.Product.findByPk(id)\r\n    .then((product) => {\r\n      if (product) {\r\n        Product.update(req.body)\r\n        .then((result) =>{\r\n          // return result.dataValues\r\n          return res.status(200).send({\r\n            success: 'true',\r\n            message: 'Product updated successfully',\r\n            data: result.dataValues\r\n          });\r\n        })\r\n      }else{\r\n        return res.status(404).send({\r\n          success: 'false',\r\n          message: 'Product does not exist',\r\n         \r\n        });\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  deleteProduct(req, res) {\r\n    const id = parseInt(req.params.id, 10);\r\n    models.Product.findByPk(id)\r\n    .then((product) => {\r\n      if (product) {\r\n        product.destroy(req.body)\r\n        .then((result) =>{\r\n          return res.status(200).send({\r\n            success: 'true',\r\n            message: 'Product deleted successfully',\r\n          });\r\n        })\r\n      }else{\r\n        return res.status(404).send({\r\n          success: 'false',\r\n          message: 'Product does not exist',\r\n         \r\n        });\r\n      }\r\n      \r\n    });\r\n  }\r\n}\r\n\r\nconst productController = new ProductsController();\r\nexport default productController;"]}