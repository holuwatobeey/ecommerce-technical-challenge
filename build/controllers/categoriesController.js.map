{"version":3,"sources":["../../src/controllers/categoriesController.js"],"names":["CategoriesController","req","res","models","Category","findAll","then","status","send","success","message","data","categories","id","parseInt","params","findByPk","category","body","name","create","update","result","dataValues","destroy","categoryController"],"mappings":"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","file":"categoriesController.js","sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport models from '../models';\r\n\r\nclass CategoriesController {\r\n    getAllCategories(req, res) {\r\n        models.Category.findAll()\r\n        .then(categories => res.status(200).send({\r\n          success: 'true',\r\n          message: 'Categories retrieved successfully',\r\n          data: categories,\r\n        }));\r\n      }\r\n\r\n  getCategory(req, res) {\r\n  const id = parseInt(req.params.id, 10);\r\n  models.Category.findByPk(id)\r\n  .then((category) => {\r\n    if (category) {\r\n      return res.status(200).send({\r\n        success: 'true',\r\n        message: 'Category retrieved successfully',\r\n        data: category,\r\n      });\r\n    }\r\n    return res.status(404).send({\r\n      success: 'false',\r\n      message: 'Category does not exist',\r\n    });\r\n  });\r\n}\r\n\r\n  createCategory(req, res) {\r\n    if (!req.body.name) {\r\n        return res.status(400).send({\r\n            success: 'false',\r\n            message: 'Name is required',\r\n        });\r\n    }\r\n\r\n  const category = {\r\n    name: req.body.name,\r\n  };\r\n  models.Category.create(category).then((category) => {\r\n    return res.status(201).send({\r\n       success: 'true',\r\n       message: 'Category added successfully',\r\n       data: category,\r\n     });\r\n  });\r\n  }\r\n\r\n  updateCategory(req, res) {\r\n    const id = parseInt(req.params.id, 10);\r\n    models.Category.findByPk(id)\r\n    .then((category) => {\r\n      if (category) {\r\n        category.update(req.body)\r\n        .then((result) =>{\r\n          // return result.dataValues\r\n          return res.status(200).send({\r\n            success: 'true',\r\n            message: 'Category updated successfully',\r\n            data: result.dataValues\r\n          });\r\n        })\r\n      }else{\r\n        return res.status(404).send({\r\n          success: 'false',\r\n          message: 'Category does not exist',\r\n         \r\n        });\r\n      }\r\n      \r\n    });\r\n  }\r\n  deleteCategory(req, res) {\r\n    const id = parseInt(req.params.id, 10);\r\n    models.Category.findByPk(id)\r\n    .then((category) => {\r\n      if (category) {\r\n        category.destroy(req.body)\r\n        .then((result) =>{\r\n          return res.status(200).send({\r\n            success: 'true',\r\n            message: 'Category deleted successfully',\r\n          });\r\n        })\r\n      }else{\r\n        return res.status(404).send({\r\n          success: 'false',\r\n          message: 'Category does not exist',\r\n         \r\n        });\r\n      }\r\n      \r\n    });\r\n  }\r\n}\r\n\r\nconst categoryController = new CategoriesController();\r\nexport default categoryController;"]}